---
author: emwilson
comments: true
date: 2015-11-13 02:36:10+00:00
layout: post
link: https://www.alwaysgetbetter.com/2015/11/12/malware-itunes-store/
slug: malware-itunes-store
title: Malware in the iTunes Store - 500M Users Affected
wordpress_id: 608
categories:
- iOS
- Mobile
tags:
- Apple
- iOS
- malware
- security
photo:
  source: /images/2015/09/xcode-ghost.jpg
  url: /images/2015/09/xcode-ghost.jpg
  description: Malware found in Xcode (xcode-ghost)
---

People rely on their app stores to provide safe and high quality software for their phones and tablets. With iTunes in particular, we trust Apple's strict review standards will raise the bar for quality and protect us from the shady apps and trojans we might find on file sharing services and third party app stores. What happens when that trust is misplaced?

A bunch of popular apps on Apple's App store [shipped with malware](http://www.gamasutra.com/view/news/254226/Malware_invades_Apple_App_Store_via_Tencents_WeChat_amp__other_apps.php) in September. "Popular", of course, refers to app used by more than 500 million iPhone users primarily in China where the malware originated. Some apps, like WeChat, are also used in the west but by-and-large the affected programs are names written in hanzi most of my readers would not be able to pronounce let alone install to their devices.



## What does the malware do?



First off, what can you expect to happen if your phone gets infected?

[This post from MacRumours](http://www.macrumors.com/2015/09/20/xcodeghost-chinese-malware-faq/) summarizes things pretty well, but the highlights are:




  
  * Sends device information, phone number and ID to C2 (command-and-control) servers

  
  * Fake system alerts phishing for passwords

  
  * Access clipboard (including stealing secrets from your password manager)

  
  * Hijack URL opening



We're not talking about phone-takeover threat levels, which is a testament to the sandboxed environment apps run in. These functions are available to pretty much any developer -- you're not supposed to use the device ID but you can get it if you want it.



## How Did Malware Get On the App Store?



The first thing that most people are asking is: how did this happen? With Apple's notoriously stringent app review process, how did apps with this vulnerability get through?

As it turns out, developers chose to download updated versions of XCode from file sharing networks rather than directly from Apple. XCode is a huge download (larger than 3Gb) so downloading directly from Apple can take a long time. In order to save time these developers thought it would be a good idea to trust an unsigned version rather than the one from Apple.



## How Did Malware Get Through the Walled Garden's Gates?



But what about the review process? The UUID-gathering portion alone should have been enough to trigger warning flags, right?

Not so, according to people who know.

Although the App Store performs a cursory check of submitted apps for private API usage, the XCodeGhost files were added as a dynamically loaded bundle to the compiled app bundle -- in other words, not subject to the code scanning... pretty sneaky.



## How to Protect Yourself



How can you protect yourself when the store you rely on for your apps is poisoned?

Not much. Other than inspecting every single network connection there are not a lot of things you can do to detect this kind of activity on your device.

Installing app updates as they become available is the best thing you can do for your phone. Although an attack on this scale was made possible by the single-provider model of the App Store, it's also true that having the App Store as the centre of the ecosystem is the best way to quickly push out fixes for problematic apps as they are discovered.
